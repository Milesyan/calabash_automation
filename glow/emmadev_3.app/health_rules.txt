3809831023003012200
 function echo() { return ['BMR']; } function calculateBMR(dailyData, age, weight, height, defaultActivityLevel, sinceDate, endDate) { var result = []; if (!height || !weight) { return result; } var generalBMRValue = generalBMR(weight, height, age); var convertedDailyData = _rawToDict(dailyData); var sinceIdx = _dateToIndex(sinceDate); var endIdx = _dateToIndex(endDate); var bmi = weight*1.0/(height*height/10000); var dailyWeight = weight; for (var i = sinceIdx; i <= endIdx; i++) { var d = convertedDailyData[i]; var ret = bmrWithDailyData(d, age, height, dailyWeight, generalBMRValue, defaultActivityLevel); bmr = ret[0]; dailyWeight = ret[1]; generalBMRValue = ret[2]; result[i] = Math.round(bmr); } return result; } function bmrWithDailyData(dailyData, age, height, dailyWeight, generalBMRValue, defaultActivityLevel) { var d = dailyData; var activityMap = { 64:1.20, 32:1.375, 4:1.55, 8:1.725, 16:1.9 }; var bmiStandardRange = [19, 25]; if ( d!= undefined && d.weight != undefined && d.weight > 0) { dailyWeight = d.weight; generalBMRValue = generalBMR(dailyWeight, height, age); } var bmr = generalBMRValue; var activityLevel = defaultActivityLevel; if (d != undefined) { if( d.exercise in activityMap) { activityLevel = d.exercise; } else if (d.exercise == 1){ activityLevel = 64; } } bmr = bmr*activityMap[activityLevel]; if (d != undefined) { if (d.smoke >= 10) { bmr = bmr*1.03; } if (d.alcohol > 2) { bmr = bmr - 70*(d.alcohol - 2); } if (d.intercourse > 1) { bmr = bmr + 100; } } bmi = dailyWeight*1.0/(height*height/10000); if (bmi < bmiStandardRange[0]) { bmr = bmr * 1.1; } else if (bmi > bmiStandardRange[1]) { bmr = bmr - 500; } if (bmr < 1200) { bmr = 1200; } return [bmr, dailyWeight, generalBMRValue]; } function generalBMR(weight, height, age) { return 655 + 9.6*weight + 1.8*height - 4.7*age; } function _rawToDict(dailyData) { var result = {}; for (var i = 0; i < dailyData.length; i++) { var dateIdx = _dateToIndex(dailyData[i].date); dailyData[i].date = dateIdx; result[dateIdx] = dailyData[i]; } return result; } function _dateToIndex(date) { return _dateMinusDate(date, "2013/01/01"); } function _indexToDate(dateIdx) { return _datePlusLength("2013/01/01", dateIdx); } function _dateObjToStr(dateObj) { var dateStr = dateObj.toISOString().substring(0, 10); return dateStr.replace(new RegExp("-", "g"), "/"); } function _datePlusLength(date, length){ var dateComps = date.split("/"); var d = new Date(date + " 00:00:00 GMT"); return _dateObjToStr(new Date(d.getTime() + length * 86400000)); } function _dateMinusDate(date1, date2){ var d1 = new Date(date1 + " 00:00:00 GMT"); var d2 = new Date(date2 + " 00:00:00 GMT"); return Math.round((d1 - d2) / 86400000); } BMR = {}; BMR.calculateBMR = calculateBMR; BMR.generalBMR = generalBMR; BMR.bmrWithDailyData = bmrWithDailyData; BMR.echo = echo; BMR.dateToIndex = _dateToIndex; 
